plugins {
    id 'java'
    id 'application' // enables the `run` task
    id 'com.google.protobuf' version '0.9.4'
}

sourceCompatibility = 17
version = '1.0.0'
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    mavenLocal()
}

def grpcVersion = '1.59.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.24.0'
def protocVersion = protobufVersion

dependencies {
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    // examples/advanced need this for JsonFormat
    testImplementation 'io.grpc:grpc-inprocess:1.59.0'
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "org.mockito:mockito-core:4.4.0"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
    test {
        java {
            srcDirs = []
        }
    }
}

// Custom run task for the server
tasks.register('runServer', JavaExec) {
    group = 'application'
    description = 'Run gRPC server'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('org.spotify.server.MetadataServer') // <- your server main class
}

// Custom run task for the client
tasks.register('runClient', JavaExec) {
    group = 'application'
    description = 'Run gRPC client'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('org.spotify.client.Main') // <- your client main class
}
