package de.tum.in.ase.eist.View;

import de.tum.in.ase.eist.Controller.Controller;
import de.tum.in.ase.eist.Model.MFT;
import java.util.List;
import java.util.ArrayList;

/*************************
 * DO NOT EDIT THIS FILE *
 *************************/

public class View implements Observer {

    protected final Controller controller;
    protected final ArrayList<MFT> mfts;
	private static int nextID = 1;
	protected final int ID;
	protected volatile double balance;

    public View(Controller controller, List<MFT> mftList) {
        this.controller = controller;
        this.mfts = new ArrayList(mftList);
        for (MFT mft : mftList) {
            mft.addObserver(this);
        }
		this.ID = nextID++;
		this.balance = 3000.00;
    }

    @Override
    public void update() {
        List<MFT> updatedMftList = controller.getMFTs();
        for (MFT newMft : updatedMftList) {
            for (MFT oldMft : mfts) {
                if (newMft.getId() == oldMft.getId()) {
                    newMft.addAllObservers(oldMft.getObservers());
                }
            }
        }

        mfts.clear();
        mfts.addAll(updatedMftList);
    }

	public void addMFT(MFT mft) {
        for (MFT existingMFT : mfts) {
            if (existingMFT.getId() == mft.getId()) {
                mfts.remove(existingMFT);
                break;
            }
        }
        mfts.add(mft);
        mft.addObserver(this);
    }

	public int getID() {
		return ID;
	}

	public double getBalance() {
		return balance;
	}

    public void setBalance(double balance) {
        this.balance = balance;
        update();
    }
}
